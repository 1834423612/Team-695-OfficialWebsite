import{a as n}from"./index-NIGUFBhG.js";const h="1834423612",u="Team-695-OfficialWebsite",a=`https://api.github.com/repos/${h}/${u}`;class g{async getRepoInfo(){try{return(await n.get(a)).data}catch(t){return console.error("Error fetching repo info:",t),null}}async getLatestCommit(t="master"){try{return(await n.get(`${a}/commits/${t}`)).data}catch(r){return console.error("Error fetching latest commit:",r),null}}async getRecentCommits(t="master",r=5){try{return(await n.get(`${a}/commits`,{params:{sha:t,per_page:r}})).data}catch(e){return console.error("Error fetching recent commits:",e),[]}}async getAllBranches(){try{return(await n.get(`${a}/branches`)).data}catch(t){return console.error("Error fetching branches:",t),[]}}async getVersionInfo(){var t,r;try{const e=await this.getLatestCommit(),o=await this.getAllBranches(),s=o.find(i=>i.name==="master"||i.name==="main")||o[0];if(!e||!s)return null;const c=new Date(e.commit.committer.date),m=`${c.getFullYear()}.${(c.getMonth()+1).toString().padStart(2,"0")}.${c.getDate().toString().padStart(2,"0")}`,l=e.sha.substring(0,6);return{version:`PROD_v${m}-${l}`,commitSha:e.sha,commitMessage:e.commit.message,commitDate:e.commit.committer.date,author:((t=e.author)==null?void 0:t.login)||e.commit.author.name,authorAvatar:((r=e.author)==null?void 0:r.avatar_url)||null,commitUrl:e.html_url,branch:s.name}}catch(e){return console.error("Error creating version info:",e),null}}async getPackageJson(){try{const t=await n.get(`${a}/contents/package.json`),r=atob(t.data.content);return JSON.parse(r)}catch(t){return console.error("Error fetching package.json:",t),null}}async getProjectStructure(t=""){try{return[...(await n.get(`${a}/contents/${t}`)).data].sort((o,s)=>o.type==="dir"&&s.type==="file"?-1:o.type==="file"&&s.type==="dir"?1:o.name.localeCompare(s.name)).map(o=>({type:o.type==="dir"?"directory":"file",name:o.name,path:o.path,sha:o.sha,size:o.size}))}catch(r){return console.error(`Error fetching project structure for path ${t}:`,r),[]}}async getFileContent(t){try{const r=await n.get(`${a}/contents/${t}`);return atob(r.data.content)}catch(r){return console.error(`Error fetching file content for ${t}:`,r),null}}}const d=new g;export{d as g};
