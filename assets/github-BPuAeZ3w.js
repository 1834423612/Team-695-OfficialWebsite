import{a as o}from"./index-NIGUFBhG.js";const m="1834423612",l="Team-695-OfficialWebsite",n=`https://api.github.com/repos/${m}/${l}`;class h{async getRepoInfo(){try{return(await o.get(n)).data}catch(t){return console.error("Error fetching repo info:",t),null}}async getLatestCommit(t="master"){try{return(await o.get(`${n}/commits/${t}`)).data}catch(r){return console.error("Error fetching latest commit:",r),null}}async getRecentCommits(t="master",r=5){try{return(await o.get(`${n}/commits`,{params:{sha:t,per_page:r}})).data}catch(a){return console.error("Error fetching recent commits:",a),[]}}async getAllBranches(){try{return(await o.get(`${n}/branches`)).data}catch(t){return console.error("Error fetching branches:",t),[]}}async getVersionInfo(){try{const t=await this.getLatestCommit(),r=await this.getAllBranches(),a=r.find(c=>c.name==="master"||c.name==="main")||r[0];if(!t||!a)return null;const e=new Date(t.commit.committer.date),s=`${e.getFullYear()}.${(e.getMonth()+1).toString().padStart(2,"0")}.${e.getDate().toString().padStart(2,"0")}`,i=t.sha.substring(0,6);return{version:`PROD_v${s}-${i}`,commitSha:t.sha,commitMessage:t.commit.message,commitDate:t.commit.committer.date,author:t.author?.login||t.commit.author.name,authorAvatar:t.author?.avatar_url||null,commitUrl:t.html_url,branch:a.name}}catch(t){return console.error("Error creating version info:",t),null}}async getPackageJson(){try{const t=await o.get(`${n}/contents/package.json`),r=atob(t.data.content);return JSON.parse(r)}catch(t){return console.error("Error fetching package.json:",t),null}}async getProjectStructure(t=""){try{return[...(await o.get(`${n}/contents/${t}`)).data].sort((e,s)=>e.type==="dir"&&s.type==="file"?-1:e.type==="file"&&s.type==="dir"?1:e.name.localeCompare(s.name)).map(e=>({type:e.type==="dir"?"directory":"file",name:e.name,path:e.path,sha:e.sha,size:e.size}))}catch(r){return console.error(`Error fetching project structure for path ${t}:`,r),[]}}async getFileContent(t){try{const r=await o.get(`${n}/contents/${t}`);return atob(r.data.content)}catch(r){return console.error(`Error fetching file content for ${t}:`,r),null}}}const f=new h;export{f as g};
